import requests
from bs4 import BeautifulSoup
import random
import time

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è —Ç–∞–π–º–∞—É—Ç–æ–≤ –Ω–∞ —Ö–æ—Å—Ç–∏–Ω–≥–µ
REQUEST_TIMEOUT = 15
HEADERS = {
    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'
}


def get_dtf_russian_news():
    """–ü–∞—Ä—Å–µ—Ä DTF (—Ä—É—Å—Å–∫–∏–π)"""
    try:
        url = "https://dtf.ru/games"
        print(f"üåê –ü–∞—Ä—Å–∏–º DTF...")

        response = requests.get(url, headers=HEADERS, timeout=REQUEST_TIMEOUT)
        response.raise_for_status()  # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞

        soup = BeautifulSoup(response.text, 'html.parser')
        news = []

        # –ë–æ–ª–µ–µ –≥–∏–±–∫–∏–π –ø–æ–∏—Å–∫ —Å—Ç–∞—Ç–µ–π
        articles = soup.find_all('article')[:8]  # –£–º–µ–Ω—å—à–∏–ª–∏ –ª–∏–º–∏—Ç –¥–ª—è —Å–∫–æ—Ä–æ—Å—Ç–∏

        for i, article in enumerate(articles):
            try:
                # –ù–µ—Å–∫–æ–ª—å–∫–æ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –ø–æ–∏—Å–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∞
                title_tag = (article.find('h2', class_='content-title') or
                             article.find('h3', class_='content-title') or
                             article.find('a', class_='content-link'))

                if title_tag:
                    link_tag = title_tag.find('a') if title_tag.name != 'a' else title_tag
                    if link_tag and link_tag.get('href'):
                        title = link_tag.text.strip()
                        if len(title) < 10:  # –°–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º
                            continue

                        link = link_tag['href']
                        if not link.startswith('http'):
                            link = "https://dtf.ru" + link

                        # –û–ø–∏—Å–∞–Ω–∏–µ
                        description_tag = article.find('div', class_='content-description')
                        description = description_tag.text.strip()[
                                      :200] if description_tag else "–ù–æ–≤–æ—Å—Ç—å –∏–∑ –º–∏—Ä–∞ –≤–∏–¥–µ–æ–∏–≥—Ä"

                        # –ö–∞—Ä—Ç–∏–Ω–∫–∞
                        image_url = None
                        img_tag = article.find('img')
                        if img_tag and img_tag.get('src'):
                            image_url = img_tag['src']
                            if image_url.startswith('//'):
                                image_url = 'https:' + image_url
                            elif image_url.startswith('/'):
                                image_url = 'https://dtf.ru' + image_url

                        news.append({
                            'title': title,
                            'description': description,
                            'link': link,
                            'image_url': image_url,
                            'source': 'DTF',
                            'has_image': image_url is not None
                        })

            except Exception as e:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å—Ç–∞—Ç—å–∏ {i}: {e}")
                continue

        print(f"‚úÖ DTF –Ω–æ–≤–æ—Å—Ç–µ–π: {len(news)}")
        return news

    except requests.exceptions.Timeout:
        print("‚ùå –¢–∞–π–º–∞—É—Ç –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ DTF")
        return []
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ DTF: {e}")
        return []


def get_igromania_russian_news():
    """–ü–∞—Ä—Å–µ—Ä –ò–≥—Ä–æ–º–∞–Ω–∏–∏ (—Ä—É—Å—Å–∫–∏–π)"""
    try:
        url = "https://www.igromania.ru/news/"
        print(f"üåê –ü–∞—Ä—Å–∏–º –ò–≥—Ä–æ–º–∞–Ω–∏—é...")

        response = requests.get(url, headers=HEADERS, timeout=REQUEST_TIMEOUT)
        response.raise_for_status()

        soup = BeautifulSoup(response.text, 'html.parser')
        news = []

        articles = soup.find_all('div', class_='aubli_data')[:8]

        for article in articles:
            try:
                title_tag = article.find('a', class_='aubli_name')
                if title_tag:
                    title = title_tag.text.strip()
                    if len(title) < 10:
                        continue

                    link = title_tag['href']
                    if not link.startswith('http'):
                        link = 'https://www.igromania.ru' + link

                    # –û–ø–∏—Å–∞–Ω–∏–µ
                    description_tag = article.find('div', class_='aubli_text')
                    description = description_tag.text.strip()[
                                  :200] if description_tag else "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –∏–≥—Ä–æ–≤–æ–π –∏–Ω–¥—É—Å—Ç—Ä–∏–∏"

                    # –ö–∞—Ä—Ç–∏–Ω–∫–∞
                    image_url = None
                    img_tag = article.find('img')
                    if img_tag and img_tag.get('src'):
                        image_url = img_tag['src']
                        if image_url.startswith('//'):
                            image_url = 'https:' + image_url

                    news.append({
                        'title': title,
                        'description': description,
                        'link': link,
                        'image_url': image_url,
                        'source': '–ò–≥—Ä–æ–º–∞–Ω–∏—è',
                        'has_image': image_url is not None
                    })

            except Exception as e:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å—Ç–∞—Ç—å–∏: {e}")
                continue

        print(f"‚úÖ –ò–≥—Ä–æ–º–∞–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π: {len(news)}")
        return news

    except requests.exceptions.Timeout:
        print("‚ùå –¢–∞–π–º–∞—É—Ç –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ –ò–≥—Ä–æ–º–∞–Ω–∏–∏")
        return []
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ò–≥—Ä–æ–º–∞–Ω–∏–∏: {e}")
        return []


def get_kanobu_russian_news():
    """–ü–∞—Ä—Å–µ—Ä –ö–∞–Ω–æ–±—É (—Ä—É—Å—Å–∫–∏–π) - –£–î–ê–õ–Ø–ï–ú, —Ç–∞–∫ –∫–∞–∫ –µ—Å—Ç—å RSS"""
    # –ù–∞ —Ö–æ—Å—Ç–∏–Ω–≥–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ RSS –¥–ª—è —Å–∫–æ—Ä–æ—Å—Ç–∏
    return []


def get_manual_russian_news():
    """–†–µ–∑–µ—Ä–≤–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º"""
    backup_news = [
        {
            'title': 'Cyberpunk 2077: Phantom Liberty - –≤—ã—à–ª–æ –Ω–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º–∏',
            'description': '–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏ –≤—ã–ø—É—Å—Ç–∏–ª–∏ –º–∞—Å—à—Ç–∞–±–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–ª—è –¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è Phantom Liberty',
            'link': 'https://www.cyberpunk.net',
            'image_url': None,
            'source': 'CD Projekt Red',
            'has_image': False
        },
        {
            'title': '–í Steam –≤—ã—à–µ–ª –Ω–æ–≤—ã–π —Ö–∏—Ç - –∏–≥—Ä–∞ –ø–æ–±–∏–ª–∞ —Ä–µ–∫–æ—Ä–¥—ã –ø—Ä–æ–¥–∞–∂',
            'description': '–ù–µ–∑–∞–≤–∏—Å–∏–º–∞—è —Å—Ç—É–¥–∏—è –ø—Ä–µ–¥—Å—Ç–∞–≤–∏–ª–∞ –ø—Ä–æ–µ–∫—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∫–æ—Ä–∏–ª –≥–µ–π–º–µ—Ä–æ–≤',
            'link': 'https://store.steampowered.com',
            'image_url': None,
            'source': 'Steam',
            'has_image': False
        }
    ]
    return backup_news


def get_all_gaming_news():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è - –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –¥–ª—è —Ö–æ—Å—Ç–∏–Ω–≥–∞"""
    print("üï∏Ô∏è  –ë—ã—Å—Ç—Ä—ã–π –ø–∞—Ä—Å–∏–Ω–≥ –Ω–æ–≤–æ—Å—Ç–µ–π...")

    all_news = []

    # –¢–æ–ª—å–∫–æ –±—ã—Å—Ç—Ä—ã–µ –∏ –Ω–∞–¥–µ–∂–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏
    all_news.extend(get_dtf_russian_news())
    all_news.extend(get_igromania_russian_news())

    print(f"üìä –ù–∞–π–¥–µ–Ω–æ –Ω–æ–≤–æ—Å—Ç–µ–π: {len(all_news)}")

    # –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à–ª–∏ - –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ
    if not all_news:
        print("‚ö†Ô∏è  –ù–æ–≤–æ—Å—Ç–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ")
        all_news = get_manual_russian_news()

    # –ë—ã—Å—Ç—Ä–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –¥—É–±–ª–∏–∫–∞—Ç–æ–≤
    unique_news = []
    seen_titles = set()

    for news in all_news:
        title_lower = news['title'].lower()
        if title_lower not in seen_titles:
            seen_titles.add(title_lower)
            unique_news.append(news)

    # –ü—Ä–æ—Å—Ç–æ–π –≤—ã–±–æ—Ä –Ω–æ–≤–æ—Å—Ç–µ–π (–±–µ–∑ —Å–ª–æ–∂–Ω–æ–π –ª–æ–≥–∏–∫–∏)
    result = unique_news[:3]  # –ü—Ä–æ—Å—Ç–æ –±–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ 3

    print(f"‚úÖ –í—ã–±—Ä–∞–Ω–æ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏: {len(result)}")
    return result


# –¢–µ—Å—Ç
if __name__ == "__main__":
    news = get_all_gaming_news()
    print(f"\n=== –†–ï–ó–£–õ–¨–¢–ê–¢: {len(news)} –Ω–æ–≤–æ—Å—Ç–µ–π ===")
    for i, item in enumerate(news, 1):
        print(f"\n{i}. {item['source']}: {item['title']}")
        print(f"   –°—Å—ã–ª–∫–∞: {item['link']}")